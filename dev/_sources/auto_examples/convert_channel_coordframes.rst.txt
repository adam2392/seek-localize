
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/convert_channel_coordframes.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_convert_channel_coordframes.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_convert_channel_coordframes.py:


.. currentmodule:: seek_localize

.. _convert_channel_coordframes-example:

===========================================
02. Convert Coordinate Frames of Electrodes
===========================================

When working with intracranial electrophysiological data in the
iEEG-BIDS_ format, we usually have iEEG coordinate data either in
``voxel``, or real world coordinates space (xyz coordinates).
Then within xyz coordinates, it can either be ``RAS``, or
``tkRAS`` if one uses FreeSurfer.

In this tutorial, we show how to quickly use the ``Sensors``
data class and quickly go back and forth between coordinate frames
using ``convert_elec_coords``.

We assume that you have already localized the electrodes and coregistered
them over to the T1w image FreeSurfer space.

.. GENERATED FROM PYTHON SOURCE LINES 24-29

.. code-block:: default


    # Authors: Adam Li <adam2392@gmail.com>
    #
    # License: BSD (3-clause)








.. GENERATED FROM PYTHON SOURCE LINES 30-33

Imports
-------
We are importing everything we need for this example:

.. GENERATED FROM PYTHON SOURCE LINES 33-39

.. code-block:: default

    from pathlib import Path

    from mne_bids import BIDSPath

    from seek_localize import read_dig_bids, convert_elecs_coords








.. GENERATED FROM PYTHON SOURCE LINES 40-43

We will be using the `testing dataset`, which
is already stored in BIDS format and stored with the
``seek-localize`` repository.

.. GENERATED FROM PYTHON SOURCE LINES 43-46

.. code-block:: default


    bids_root = (Path.cwd() / Path("../data/")).absolute()








.. GENERATED FROM PYTHON SOURCE LINES 47-51

Now it's time to get ready for labeling some of the data! First, we need to
create a :func:`mne_bids.BIDSPath`, which will point to the corresponding
``*electrodes.tsv`` file.


.. GENERATED FROM PYTHON SOURCE LINES 51-73

.. code-block:: default


    subject = "la02"
    session = "presurgery"
    acquisition = "seeg"
    space = "fs"
    suffix = "electrodes"
    extension = ".tsv"
    datatype = "ieeg"
    electrodes_fpath = BIDSPath(
        root=bids_root,
        datatype=datatype,
        subject=subject,
        session=session,
        acquisition=acquisition,
        space=space,
        suffix=suffix,
        extension=extension,
    )

    # the full file path to the electrodes.tsv file
    print(electrodes_fpath.fpath)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/circleci/project/examples/../data/sub-la02/ses-presurgery/ieeg/sub-la02_ses-presurgery_acq-seeg_space-fs_electrodes.tsv




.. GENERATED FROM PYTHON SOURCE LINES 74-80

The necessary iEEG files are the
``sub-la02_ses-presurgery_acq-seeg_space-fs_electrodes.tsv``,
``sub-la02_ses-presurgery_acq-seeg_space-fs_coordsystem.json`` files. Note
these are co-occurring files in iEEG-BIDS_ (one present requires the other to
be present).


.. GENERATED FROM PYTHON SOURCE LINES 80-86

.. code-block:: default


    coordsystem_fpath = electrodes_fpath.copy().update(
        suffix="coordsystem", extension=".json"
    )
    print(coordsystem_fpath.fpath)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/circleci/project/examples/../data/sub-la02/ses-presurgery/ieeg/sub-la02_ses-presurgery_acq-seeg_space-fs_coordsystem.json




.. GENERATED FROM PYTHON SOURCE LINES 87-95

Let's load in the electrode coordinates as an instance of the
`seek_localize.Sensors` class. Rather then instantiating the class
directly, we use `seek_localize.read_dig_bids` to read in the
correct data. This will perform extra work, such as figuring
out the full path to the ``IntendedFor`` volumetric image. The
image corresponds to the coordinate space to interpret the
electrode coordinates in (e.g. a T1w image in FreeSurfer space).


.. GENERATED FROM PYTHON SOURCE LINES 95-99

.. code-block:: default


    sensors = read_dig_bids(electrodes_fpath, coordsystem_fpath)
    print(sensors)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Sensors(ch_names=["L'1", "L'2", "L'3", "L'4", "L'5", "L'6", "L'7", "L'8", "L'11", "L'12", "L'13", "L'14", "N'1", "N'2", "N'3", "N'4", "N'5", "N'6", "N'7", "L'9", "L'10", "N'8", "N'9", "N'10", "N'11", "N'12", "F'1", "F'2", "F'3", "F'4", "F'5", "F'6", "F'7", "F'8", "F'9", "F'10", "F'11", "F'12", "F'13", "F'14", "O'1", "O'2", "O'3", "O'4", "O'5", "O'6", "O'7", "O'8", "O'9", "O'10", "O'11", "O'12", "O'13", "O'14", "O'15", "O'16", "G'1", "G'2", "G'3", "G'4", "G'5", "G'6", "G'7", "G'8", "G'9", "G'10", "G'11", "G'12", "G'13", "G'14", "G'15", "G'16", "X'1", "X'2", "X'3", "X'4", "X'5", "X'6", "X'7", "X'8", "X'9", "X'10", "X'11", "X'12", "X'13", "X'14", "X'15", "X'16"], x=['-1.095576', '-3.804778', '-7.318944', '-10.587486', '-13.942345', '-17.505318', '-21.141346', '-24.768636', '-35.076995', '-38.717799', '-41.295015', '-45.299609', '0.310365', '-2.779489', '-6.232275', '-9.536342', '-13.145142', '-16.482282', '-20.069954', '-28.123609', '-31.415426', '-23.744426', '-26.677349', '-30.366181', '-33.968939', '-38.102582', '0.861862', '-3.310259', '-6.687859', '-10.103678', '-13.723719', '-17.402136', '-21.041273', '-24.332869', '-28.005797', '-31.610378', '-34.977180', '-38.321770', '-42.347067', '-45.247106', '-2.619987', '-6.001861', '-9.757011', '-12.702457', '-16.000612', '-19.941449', '-23.292785', '-26.549290', '-30.189134', '-33.504938', '-36.844992', '-40.450991', '-43.396573', '-46.761809', '-50.799976', '-52.358044', '0.018761', '-3.112528', '-6.528509', '-10.133507', '-13.435716', '-17.063573', '-20.408834', '-24.001348', '-27.369889', '-30.985986', '-34.257121', '-37.687867', '-41.277843', '-44.616937', '-48.701198', '-51.498405', '-0.416632', '-2.660382', '-6.022934', '-10.101884', '-14.092396', '-17.026503', '-20.661998', '-23.555413', '-26.875198', '-29.802244', '-32.646110', '-36.646198', '-40.097632', '-43.652207', '-46.536866', '-50.232055'], y=['66.539884', '67.947332', '67.799889', '67.266380', '68.679315', '68.924151', '69.575450', '70.216901', '71.398199', '72.429766', '72.632320', '72.962515', '55.307639', '55.580637', '55.840585', '55.708765', '56.022641', '56.661112', '57.348006', '70.128234', '71.136879', '57.254204', '58.281536', '58.192371', '58.874767', '59.640912', '63.898502', '64.571406', '65.592659', '65.049286', '65.693017', '65.135075', '65.785383', '66.843202', '67.427854', '67.660516', '68.303613', '68.941184', '69.579321', '69.826285', '43.623528', '44.705278', '44.643291', '45.252072', '45.935355', '46.264511', '46.157549', '47.194924', '47.074387', '47.366476', '48.015650', '48.309201', '49.338923', '49.220334', '49.151101', '49.637330', '53.647884', '53.860282', '55.282611', '55.532376', '56.152072', '56.055837', '56.679634', '56.921880', '57.549149', '57.797984', '58.413666', '58.658298', '58.900392', '59.524187', '59.806767', '60.370667', '28.166140', '28.353301', '28.632972', '28.986033', '28.986742', '29.234083', '29.546895', '30.125634', '30.065661', '29.995585', '30.604097', '31.289810', '31.247037', '31.929346', '32.208883', '32.901193'], z=['35.287211', '35.308774', '35.474825', '36.440106', '36.434484', '36.523733', '36.618872', '36.678147', '37.646456', '37.662103', '37.804739', '38.653796', '56.059407', '57.002584', '57.364656', '58.360146', '59.303125', '59.521911', '60.408980', '37.574121', '37.578534', '61.382683', '61.560423', '62.593553', '63.507398', '64.751481', '21.573020', '21.624713', '21.649191', '21.755192', '21.803671', '21.900789', '21.949461', '22.750460', '21.936957', '21.922215', '21.889212', '21.897649', '22.112220', '22.024732', '5.812632', '6.761735', '7.832460', '8.090518', '9.019448', '9.972084', '10.932246', '11.066268', '12.073564', '12.975333', '13.203840', '14.138261', '14.303202', '15.224906', '15.879254', '16.078271', '35.197651', '35.337854', '35.345926', '35.426841', '35.463624', '36.323271', '36.336439', '36.383149', '36.391990', '36.431495', '36.420977', '36.460188', '36.512916', '36.540439', '36.684980', '36.764905', '50.955763', '51.929068', '53.161506', '54.305472', '55.980049', '57.034625', '58.104272', '59.101146', '60.189676', '61.255322', '62.205235', '63.267809', '64.402526', '65.398302', '66.400773', '67.544440'], coord_system='other', coord_unit='mm', elecs_fname=BIDSPath(
    root: /home/circleci/project/examples/../data
    datatype: ieeg
    basename: sub-la02_ses-presurgery_acq-seeg_space-fs_electrodes.tsv), coordsystem_fname=BIDSPath(
    root: /home/circleci/project/examples/../data
    datatype: ieeg
    basename: sub-la02_ses-presurgery_acq-seeg_space-fs_coordsystem.json), intended_for=BIDSPath(
    root: /home/circleci/project/examples/../data
    datatype: anat
    basename: sub-la02_ses-presurgery_space-fs_T1w))




.. GENERATED FROM PYTHON SOURCE LINES 100-103

The data already saved was originally written in ``'mm'``, so we can
convert to ``voxel`` space.


.. GENERATED FROM PYTHON SOURCE LINES 103-107

.. code-block:: default


    sensors_vox = convert_elecs_coords(sensors, to_coord="voxel")
    print(sensors_vox)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Sensors(ch_names=["L'1", "L'2", "L'3", "L'4", "L'5", "L'6", "L'7", "L'8", "L'11", "L'12", "L'13", "L'14", "N'1", "N'2", "N'3", "N'4", "N'5", "N'6", "N'7", "L'9", "L'10", "N'8", "N'9", "N'10", "N'11", "N'12", "F'1", "F'2", "F'3", "F'4", "F'5", "F'6", "F'7", "F'8", "F'9", "F'10", "F'11", "F'12", "F'13", "F'14", "O'1", "O'2", "O'3", "O'4", "O'5", "O'6", "O'7", "O'8", "O'9", "O'10", "O'11", "O'12", "O'13", "O'14", "O'15", "O'16", "G'1", "G'2", "G'3", "G'4", "G'5", "G'6", "G'7", "G'8", "G'9", "G'10", "G'11", "G'12", "G'13", "G'14", "G'15", "G'16", "X'1", "X'2", "X'3", "X'4", "X'5", "X'6", "X'7", "X'8", "X'9", "X'10", "X'11", "X'12", "X'13", "X'14", "X'15", "X'16"], x=array([128, 131, 134, 137, 141, 144, 148, 152, 162, 166, 168, 172, 127,
           130, 133, 136, 140, 143, 147, 155, 158, 151, 153, 157, 161, 165,
           126, 130, 134, 137, 141, 144, 148, 151, 155, 158, 162, 165, 169,
           172, 129, 133, 137, 140, 143, 147, 150, 153, 157, 160, 164, 167,
           170, 174, 178, 179, 127, 130, 133, 137, 140, 144, 147, 151, 154,
           158, 161, 165, 168, 171, 176, 178, 127, 129, 133, 137, 141, 144,
           147, 150, 154, 157, 159, 163, 167, 170, 173, 177]), y=array([124, 124, 124, 123, 123, 123, 123, 123, 122, 122, 122, 121, 104,
           103, 102, 101, 100, 100,  99, 122, 122,  98,  98,  97,  96,  95,
           138, 138, 138, 138, 138, 138, 138, 137, 138, 138, 138, 138, 138,
           138, 154, 153, 152, 152, 151, 150, 149, 149, 148, 147, 146, 146,
           145, 144, 144, 144, 124, 124, 124, 124, 124, 123, 123, 123, 123,
           123, 123, 123, 123, 123, 123, 123, 109, 108, 106, 105, 104, 103,
           102, 101,  99,  98,  97,  96,  95,  94,  93,  92]), z=array([188, 190, 189, 189, 190, 190, 191, 192, 193, 194, 194, 195, 177,
           177, 177, 177, 178, 178, 179, 192, 193, 179, 180, 180, 180, 181,
           185, 186, 187, 187, 187, 187, 187, 188, 189, 189, 190, 191, 191,
           191, 165, 166, 166, 167, 168, 168, 168, 169, 169, 169, 170, 170,
           171, 171, 171, 171, 175, 175, 177, 177, 178, 178, 178, 178, 179,
           179, 180, 180, 180, 181, 181, 182, 150, 150, 150, 151, 151, 151,
           151, 152, 152, 152, 152, 153, 153, 154, 154, 154]), coord_system='other', coord_unit='voxel', elecs_fname=BIDSPath(
    root: /home/circleci/project/examples/../data
    datatype: ieeg
    basename: sub-la02_ses-presurgery_acq-seeg_space-fs_electrodes.tsv), coordsystem_fname=BIDSPath(
    root: /home/circleci/project/examples/../data
    datatype: ieeg
    basename: sub-la02_ses-presurgery_acq-seeg_space-fs_coordsystem.json), intended_for=BIDSPath(
    root: /home/circleci/project/examples/../data
    datatype: anat
    basename: sub-la02_ses-presurgery_space-fs_T1w))




.. GENERATED FROM PYTHON SOURCE LINES 108-109

We could convert it back to ``mm``.

.. GENERATED FROM PYTHON SOURCE LINES 109-112

.. code-block:: default

    sensors_mm = convert_elecs_coords(sensors_vox, to_coord="mm")
    print(sensors_mm)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Sensors(ch_names=["L'1", "L'2", "L'3", "L'4", "L'5", "L'6", "L'7", "L'8", "L'11", "L'12", "L'13", "L'14", "N'1", "N'2", "N'3", "N'4", "N'5", "N'6", "N'7", "L'9", "L'10", "N'8", "N'9", "N'10", "N'11", "N'12", "F'1", "F'2", "F'3", "F'4", "F'5", "F'6", "F'7", "F'8", "F'9", "F'10", "F'11", "F'12", "F'13", "F'14", "O'1", "O'2", "O'3", "O'4", "O'5", "O'6", "O'7", "O'8", "O'9", "O'10", "O'11", "O'12", "O'13", "O'14", "O'15", "O'16", "G'1", "G'2", "G'3", "G'4", "G'5", "G'6", "G'7", "G'8", "G'9", "G'10", "G'11", "G'12", "G'13", "G'14", "G'15", "G'16", "X'1", "X'2", "X'3", "X'4", "X'5", "X'6", "X'7", "X'8", "X'9", "X'10", "X'11", "X'12", "X'13", "X'14", "X'15", "X'16"], x=array([ -1,  -4,  -7, -10, -14, -17, -21, -25, -35, -39, -41, -45,   0,
            -3,  -6,  -9, -13, -16, -20, -28, -31, -24, -26, -30, -34, -38,
             1,  -3,  -7, -10, -14, -17, -21, -24, -28, -31, -35, -38, -42,
           -45,  -2,  -6, -10, -13, -16, -20, -23, -26, -30, -33, -37, -40,
           -43, -47, -51, -52,   0,  -3,  -6, -10, -13, -17, -20, -24, -27,
           -31, -34, -38, -41, -44, -49, -51,   0,  -2,  -6, -10, -14, -17,
           -20, -23, -27, -30, -32, -36, -40, -43, -46, -50]), y=array([66, 68, 67, 67, 68, 68, 69, 70, 71, 72, 72, 73, 55, 55, 55, 55, 56,
           56, 57, 70, 71, 57, 58, 58, 58, 59, 63, 64, 65, 65, 65, 65, 65, 66,
           67, 67, 68, 69, 69, 69, 43, 44, 44, 45, 46, 46, 46, 47, 47, 47, 48,
           48, 49, 49, 49, 49, 53, 53, 55, 55, 56, 56, 56, 56, 57, 57, 58, 58,
           58, 59, 59, 60, 28, 28, 28, 29, 29, 29, 29, 30, 30, 30, 30, 31, 31,
           32, 32, 32]), z=array([36, 36, 36, 37, 37, 37, 37, 37, 38, 38, 38, 39, 56, 57, 58, 59, 60,
           60, 61, 38, 38, 62, 62, 63, 64, 65, 22, 22, 22, 22, 22, 22, 22, 23,
           22, 22, 22, 22, 22, 22,  6,  7,  8,  8,  9, 10, 11, 11, 12, 13, 14,
           14, 15, 16, 16, 16, 36, 36, 36, 36, 36, 37, 37, 37, 37, 37, 37, 37,
           37, 37, 37, 37, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65,
           66, 67, 68]), coord_system='other', coord_unit='mm', elecs_fname=BIDSPath(
    root: /home/circleci/project/examples/../data
    datatype: ieeg
    basename: sub-la02_ses-presurgery_acq-seeg_space-fs_electrodes.tsv), coordsystem_fname=BIDSPath(
    root: /home/circleci/project/examples/../data
    datatype: ieeg
    basename: sub-la02_ses-presurgery_acq-seeg_space-fs_coordsystem.json), intended_for=BIDSPath(
    root: /home/circleci/project/examples/../data
    datatype: anat
    basename: sub-la02_ses-presurgery_space-fs_T1w))




.. GENERATED FROM PYTHON SOURCE LINES 113-114

We could convert it back to ``tkras``.

.. GENERATED FROM PYTHON SOURCE LINES 114-117

.. code-block:: default

    sensors_tkras = convert_elecs_coords(sensors_vox, to_coord="tkras")
    print(sensors_tkras)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ../seek_localize/label.py:127: RuntimeWarning: Unable to programmatically get vox2ras TKR, so setting manually. Error: 'Nifti1Header' object has no attribute 'get_vox2ras_tkr'
      warn(
    Sensors(ch_names=["L'1", "L'2", "L'3", "L'4", "L'5", "L'6", "L'7", "L'8", "L'11", "L'12", "L'13", "L'14", "N'1", "N'2", "N'3", "N'4", "N'5", "N'6", "N'7", "L'9", "L'10", "N'8", "N'9", "N'10", "N'11", "N'12", "F'1", "F'2", "F'3", "F'4", "F'5", "F'6", "F'7", "F'8", "F'9", "F'10", "F'11", "F'12", "F'13", "F'14", "O'1", "O'2", "O'3", "O'4", "O'5", "O'6", "O'7", "O'8", "O'9", "O'10", "O'11", "O'12", "O'13", "O'14", "O'15", "O'16", "G'1", "G'2", "G'3", "G'4", "G'5", "G'6", "G'7", "G'8", "G'9", "G'10", "G'11", "G'12", "G'13", "G'14", "G'15", "G'16", "X'1", "X'2", "X'3", "X'4", "X'5", "X'6", "X'7", "X'8", "X'9", "X'10", "X'11", "X'12", "X'13", "X'14", "X'15", "X'16"], x=array([129, 132, 135, 138, 142, 145, 149, 153, 163, 167, 169, 173, 128,
           131, 134, 137, 141, 144, 148, 156, 159, 152, 154, 158, 162, 166,
           127, 131, 135, 138, 142, 145, 149, 152, 156, 159, 163, 166, 170,
           173, 130, 134, 138, 141, 144, 148, 151, 154, 158, 161, 165, 168,
           171, 175, 179, 180, 128, 131, 134, 138, 141, 145, 148, 152, 155,
           159, 162, 166, 169, 172, 177, 179, 128, 130, 134, 138, 142, 145,
           148, 151, 155, 158, 160, 164, 168, 171, 174, 178]), y=array([118, 118, 118, 117, 117, 117, 117, 117, 116, 116, 116, 115,  98,
            97,  96,  95,  94,  94,  93, 116, 116,  92,  92,  91,  90,  89,
           132, 132, 132, 132, 132, 132, 132, 131, 132, 132, 132, 132, 132,
           132, 148, 147, 146, 146, 145, 144, 143, 143, 142, 141, 140, 140,
           139, 138, 138, 138, 118, 118, 118, 118, 118, 117, 117, 117, 117,
           117, 117, 117, 117, 117, 117, 117, 103, 102, 100,  99,  98,  97,
            96,  95,  93,  92,  91,  90,  89,  88,  87,  86]), z=array([156, 158, 157, 157, 158, 158, 159, 160, 161, 162, 162, 163, 145,
           145, 145, 145, 146, 146, 147, 160, 161, 147, 148, 148, 148, 149,
           153, 154, 155, 155, 155, 155, 155, 156, 157, 157, 158, 159, 159,
           159, 133, 134, 134, 135, 136, 136, 136, 137, 137, 137, 138, 138,
           139, 139, 139, 139, 143, 143, 145, 145, 146, 146, 146, 146, 147,
           147, 148, 148, 148, 149, 149, 150, 118, 118, 118, 119, 119, 119,
           119, 120, 120, 120, 120, 121, 121, 122, 122, 122]), coord_system='other', coord_unit='tkras', elecs_fname=BIDSPath(
    root: /home/circleci/project/examples/../data
    datatype: ieeg
    basename: sub-la02_ses-presurgery_acq-seeg_space-fs_electrodes.tsv), coordsystem_fname=BIDSPath(
    root: /home/circleci/project/examples/../data
    datatype: ieeg
    basename: sub-la02_ses-presurgery_acq-seeg_space-fs_coordsystem.json), intended_for=BIDSPath(
    root: /home/circleci/project/examples/../data
    datatype: anat
    basename: sub-la02_ses-presurgery_space-fs_T1w))




.. GENERATED FROM PYTHON SOURCE LINES 118-122

.. LINKS

.. _iEEG-BIDS:
   https://bids-specification.readthedocs.io/en/stable/04-modality-specific-files/04-intracranial-electroencephalography.html


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.029 seconds)


.. _sphx_glr_download_auto_examples_convert_channel_coordframes.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: convert_channel_coordframes.py <convert_channel_coordframes.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: convert_channel_coordframes.ipynb <convert_channel_coordframes.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
