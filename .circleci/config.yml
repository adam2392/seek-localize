version: 2.1

jobs:
  docs-build:
    docker:
      - image: circleci/python:3.8-buster
    steps:
      - checkout

      # Also restore pip cache to speed up installations
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - pip-packages-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - pip-packages-v1-{{ .Branch }}-
            - pip-packages-v1-

      - run:
          name: Setup Python environment via Pipenv
          # ... but use latest version of EZTrack
          command: |
            sudo pip install --upgrade pip
            sudo pip install pipenv
            pipenv install --skip-lock --dev

      - run:
          name: Run unit and integration tests
          command: |
            pipenv run make check

      - run:
          name: Clone testing data
          command: git clone --depth 1 https://github.com/adam2392/seek-testing-data.git

#      - run:
#          name: Run snakemake check
#          command: |
#            pipenv shell;
#            export SEEKHOME=$(cwd) && cd workflow/prep_localization/ && pipenv run snakemake --lint --config bids_root='./seek-testing-data' subjects=testsubjects.tsv;
#            cd $OLDPWD && cd workflow/coregistration/ && pipenv run snakemake --lint --config bids_root='./seek-testing-data' subjects=testsubjects.tsv;
#            cd $OLDPWD && cd workflow/prep_vizengine/ && pipenv run snakemake --lint --config bids_root='./seek-testing-data' subjects=testsubjects.tsv;
#            pipenv run export SEEKHOME=$(pwd) && snakemake --config bids_root='./seek-testing-data' subjects=testsubjects.tsv --snakefile ./workflow/recon/Snakefile --forceall --dag | dot -Tpdf > ./recon.pdf;
#            pipenv run export SEEKHOME=$(pwd) && snakemake --config bids_root='./seek-testing-data' subjects=testsubjects.tsv --snakefile ./workflow/prep_localization/Snakefile --forceall --dag | dot -Tpdf > ./prep_localization.pdf;
#            pipenv run export SEEKHOME=$(pwd) && snakemake --config bids_root='./seek-testing-data' subjects=testsubjects.tsv --snakefile ./workflow/coregistration/Snakefile --forceall --dag | dot -Tpdf > ./coregistration.pdf;
#            pipenv run export SEEKHOME=$(pwd) && snakemake --config bids_root='./seek-testing-data' subjects=testsubjects.tsv --snakefile ./workflow/prep_vizengine/Snakefile --forceall --dag | dot -Tpdf > ./prep_viz.pdf;
#            pipenv run export SEEKHOME=$(pwd) && snakemake --config bids_root='./seek-testing-data' subjects=testsubjects.tsv --snakefile ./workflow/recon/Snakefile -n

      - save_cache:
          key: pip-packages-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - "~/.local/share/virtualenvs/venv"

      - run:
          name: Build the documentation
          command: |
            pipenv run make build-doc

      - persist_to_workspace:
          root: doc/_build
          paths: html

      - store_artifacts:
          path: doc/_build/html/
          destination: dev

      - run:
          name: Check links
          command: |
            pipenv run make -C doc clean
#            pipenv run make -C doc linkcheck
#            pipenv run make -C doc linkcheck-grep

  docs-deploy:
    # will only be run on master branch
    docker:
      - image: node:8.10.0
    steps:
      - checkout

      - attach_workspace:
          at: doc/_build

      - run:
          name: Install and configure dependencies
          command: |
            npm install -g --silent gh-pages@2.2
            git config --global user.email "circle@seek.com"
            git config --global user.name "Circle Ci"

      - add_ssh_keys:
          fingerprints:
            - "de:75:29:a1:56:a9:53:08:b5:8f:95:c8:12:7a:bf:44"

      - run:
          # push built docs into the `dev` directory on the `gh-pages` branch
          name: Deploy docs to gh-pages branch
          command: gh-pages --dotfiles --message "doc updates [skip ci]" --dist doc/_build/html --dest ./dev

workflows:
  commit:
    jobs:
      - docs-build
#      - docs-deploy:
#          requires:
#            - docs-build
#          filters:
#            branches:
#              only: master

#  scheduled:
#    jobs:
#      - docs-build
#
#    triggers:
#      - schedule:
#          cron: "0 4 * * *"
#          filters:
#            branches:
#              only:
#                - master

